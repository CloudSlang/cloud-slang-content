#   (c) Copyright 2019 EntIT Software LLC, a Micro Focus company, L.P.
#   All rights reserved. This program and the accompanying materials
#   are made available under the terms of the Apache License v2.0 which accompany this distribution.
#
#   The Apache License is available at
#   http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
########################################################################################################################
testConfigurePostgresConfigWithCommandLineParametersOnLinuxSuccess:
  testSuites: [postgresql,postgresql-linux,configure-postgres-linux]
  testFlowPath: io.cloudslang.postgresql.linux.test_configure_postgres_on_linux
  inputs:
    - hostname: <hostname>
    - username: <username>
    - private_key_file: <my_file.pem>
    - max_connections: '99'
    - listen_addresses: "'localhost'"
    - port: '5432'
    - shared_buffers: '129MB'
    - effective_cache_size: '6GB'
    - autovacuum: 'off'
    - work_mem: '6MB'
    - ssl: 'off'
    - ssl_ca_file: ''
    - ssl_cert_file: ''
    - ssl_key_file: ''
    - reboot: 'yes'
  description: >
      Tests that run configure_postgres_on_linux.sl to update parameters from CLI and finishes with SUCCESS
      Notes:
        ssl_*_file must be existing files or empty values. Otherwise, postgres doesn't start after rebooting
        Set 'reboot' = yes to verify updated parameters from a database
  outputs:
    - return_result: |-
        autovacuum|off
        effective_cache_size|786432
        listen_addresses|localhost
        max_connections|99
        port|5432
        shared_buffers|16512
        ssl|off
        ssl_ca_file|
        ssl_cert_file|server.crt
        ssl_key_file|server.key
        work_mem|6144
  result: SUCCESS

testConfigurePostgresConfigWithLocalPostgressConfFileOnLinuxSuccess:
  testSuites: [postgresql,postgresql-linux,configure-postgres-linux]
  testFlowPath: io.cloudslang.postgresql.linux.test_configure_postgres_on_linux
  inputs:
    - hostname: <hostname>
    - username: <username>
    - private_key_file: <my_file.pem>
    - configuration_file: <full_path_to_postgresql.conf>
    - reboot: 'yes'
  description: >
      Tests that run configure_postgres_on_linux.sl to update parameters from CLI and finishes with SUCCESS
      Notes:
        'configuration_file' must be the absolute file path
        Set 'reboot' = yes to verify updated parameters from a postgres database
  outputs:
    - return_result: |-
        autovacuum|off
        effective_cache_size|1179648
        listen_addresses|localhost
        max_connections|98
        port|5432
        shared_buffers|16512
        ssl|off
        ssl_ca_file|
        ssl_cert_file|server.crt
        ssl_key_file|server.key
        work_mem|7168
  result: SUCCESS

testConfigurePgHbaConfigWithLocalPostgressConfFileOnLinuxSuccess:
  testSuites: [postgresql,postgresql-linux,configure-postgres-linux]
  testFlowPath: io.cloudslang.postgresql.linux.test_configure_postgres_on_linux
  inputs:
    - hostname: <hostname>
    - username: <username>
    - private_key_file: <my_file.pem>
    - configuration_file:  <full_path_to_pg_hba.conf>
  description: >
      Tests that run configure_postgres_on_linux.sl to update pg_hba.conf from CLI and finishes with SUCCESS
      Notes:
        'configuration_file' must be the absolute file path
  outputs:
  result: SUCCESS

testConfigurePgHbaConfigWithCommandLineParametersOnLinuxSuccess:
  testSuites: [postgresql,postgresql-linux,configure-postgres-linux]
  testFlowPath: io.cloudslang.postgresql.linux.test_configure_postgres_on_linux
  inputs:
    - hostname: <hostname>
    - username: <username>
    - private_key_file: <my_file.pem>
    - allowed_users: 'all'
    - allowed_hosts: 'local'
  description: >
      Tests that run configure_postgres_on_linux.sl to update pg_hba.conf from CLI and finishes with SUCCESS
      Notes:
        'configuration_file' must be the absolute file path
  outputs:
  result: SUCCESS

testConfigurePostgresWithNonExistinglocalConfigurationFileOnLinuxFailure:
  testSuites: [postgresql,postgresql-linux,configure-postgres-linux]
  testFlowPath: io.cloudslang.postgresql.linux.test_configure_postgres_on_linux
  inputs:
    - hostname: <hostname>
    - username: <username>
    - private_key_file: <my_file.pem>
    - configuration_file: "./some.conf"
    - reboot: 'yes'
  description: >
      Tests that run configure_postgres_on_linux.sl to update parameters with non-existing config file and finishes with FAILURE
  outputs:
    - return_result: "./some.conf: No such file or directory"
  result: FAILURE

