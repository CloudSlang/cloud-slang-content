#   (c) Copyright 2019 EntIT Software LLC, a Micro Focus company, L.P.
#   All rights reserved. This program and the accompanying materials
#   are made available under the terms of the Apache License v2.0 which accompany this distribution.
#
#   The Apache License is available at
#   http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
########################################################################################################################
testOperatePostgresWithUnrecognizedOperatiOnLinuxSuccess:
  testSuites: [postgresql,postgresql-linux,operate-postgres-linux]
  testFlowPath: io.cloudslang.postgresql.linux.test_operate_postgres_on_linux
  inputs:
    - hostname: <hostname>
    - username: <username>
    - operation: 'unrecognized-operation'
    - private_key_file: <my_file.pem>
  description: "Tests that run operate_postgres_on_linux.sl with an unrecognized operation name and finishes with FAILURE"
  outputs:
    - operation_exception: |-
        pg_ctl: unrecognized operation mode "unrecognized-operation"
        Try "pg_ctl --help" for more information.
  result: SUCCESS

testOperatePostgresWithOperationStopOnLinuxSuccess:
  testSuites: [postgresql,postgresql-linux,operate-postgres-linux]
  testFlowPath: io.cloudslang.postgresql.linux.test_operate_postgres_on_linux
  inputs:
    - hostname: <hostname>
    - username: <username>
    - operation: 'stop'
    - private_key_file: <my_file.pem>
  description: >
     Tests that run operate_postgres_on_linux.sl with the operation 'stop' and finishes with SUCCESS.
     Stopping db is background process.
     PreRequest: db is running
     Test: do the operation 'stop', do the operation 'status' and verify a result.
     PostRequest: check the current status and if db is stopped then run the operation 'start'
  outputs:
    - operation_return_result: |-
        pg_ctl: no server running
  result: SUCCESS

testOperatePostgresWithOperationRestartOnLinuxSuccess:
  testSuites: [postgresql,postgresql-linux,operate-postgres-linux]
  testFlowPath: io.cloudslang.postgresql.linux.test_operate_postgres_on_linux
  inputs:
    - hostname: <hostname>
    - username: <username>
    - operation: 'restart'
    - private_key_file: <my_file.pem>
  description: >
     Tests that run operate_postgres_on_linux.sl with the operation 'restart' and finishes with SUCCESS.
     Restarting db is background process.
     PreRequest: db is running
     Test: do the operation 'restart', do the operation 'status' and verify a result.
     PostRequest: check the current status and if db is stopped then run the operation 'start'
  outputs:
    - is_proccess_id_changed: "True"
  result: SUCCESS

testOperatePostgresWithOperationReloadOnLinuxSuccess:
  testSuites: [postgresql,postgresql-linux,operate-postgres-linux]
  testFlowPath: io.cloudslang.postgresql.linux.test_operate_postgres_on_linux
  inputs:
    - hostname: <hostname>
    - username: <username>
    - operation: 'reload'
    - private_key_file: <my_file.pem>
  description: >
     Tests that run operate_postgres_on_linux.sl with the operation 'reload' and finishes with SUCCESS.
     Reloading db doesn't stop server, process id should be the same
     PreRequest: db is running
     Test: do the operation 'reload', do the operation 'status' and verify a result.
     PostRequest: check the current status and if db is stopped then run the operation 'start'
  outputs:
    - is_proccess_id_changed: "False"
  result: SUCCESS

testOperatePostgresWithEnableOnBootOnLinuxSuccess:
  testSuites: [postgresql,postgresql-linux,operate-postgres-linux]
  testFlowPath: io.cloudslang.postgresql.linux.test_operate_postgres_on_linux
  inputs:
    - hostname: <hostname>
    - username: <username>
    - start_on_boot: 'true'
    - private_key_file: <my_file.pem>
  description: "Tests that run operate_postgres_on_linux.sl with start_on_boot='true' and finishes with FAILURE"
  outputs:
    - service_status: "enabled"
  result: SUCCESS

testOperatePostgresWithDisableOnBootOnLinuxSuccess:
  testSuites: [postgresql,postgresql-linux,operate-postgres-linux]
  testFlowPath: io.cloudslang.postgresql.linux.test_operate_postgres_on_linux
  inputs:
    - hostname: <hostname>
    - username: <username>
    - start_on_boot: 'false'
    - private_key_file: <my_file.pem>
  description: "Tests that run operate_postgres_on_linux.sl with start_on_boot='false' and finishes with FAILURE"
  outputs:
    - service_status: "disabled"
  result: SUCCESS
